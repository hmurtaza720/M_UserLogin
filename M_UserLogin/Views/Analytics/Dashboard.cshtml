@using System.Text.Json
@model M_UserLogin.Models.AnalyticsViewModel

@{
    ViewData["Title"] = "User Insights";
    var roleJson = ViewBag.RoleDistributionJson ?? "{}";
    var attendanceDates = JsonSerializer.Serialize(Model.AttendanceDates ?? new List<string>());
    var attendanceCounts = JsonSerializer.Serialize(Model.CheckInCounts ?? new List<int>());
}

<style>
    html, body {
        height: 100%;
        margin: 0;
        padding: 0;
        overflow: hidden;
        background: linear-gradient(135deg, #000000, #2b2b2b);
        font-family: 'Segoe UI', sans-serif;
        color: #fff;
    }

    .header-bar {
        background: #111;
        color: #ffc107;
        padding: 15px 40px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        border-bottom: 1px solid #ffc10733;
    }

    .header-bar h3 {
        margin: 0;
    }

    .header-bar a {
        color: #fff;
        border: 1px solid #ffc107;
        border-radius: 8px;
        padding: 6px 14px;
        text-decoration: none;
        transition: 0.3s;
    }

    .header-bar a:hover {
        background: #ffc107;
        color: #000;
    }

    .analytics-wrapper {
        display: flex;
        justify-content: center;
        align-items: flex-start;
        height: calc(100vh - 70px);
        overflow-y: auto;
        padding: 40px 0;
    }

    .analytics-card {
        width: 90%;
        max-width: 1100px;
        background: #111;
        color: #fff;
        border-radius: 20px;
        padding: 30px;
        box-shadow: 0 8px 30px rgba(0,0,0,0.6);
        border: 1px solid #ffc10733;
    }

    h2 {
        color: #ffc107;
        margin-bottom: 10px;
        text-align: center;
    }

    .text-muted {
        color: #ccc !important;
    }

    .stats-row {
        display: flex;
        justify-content: space-around;
        margin-top: 25px;
        margin-bottom: 35px;
    }

    .stat-box {
        background: rgba(255,255,255,0.05);
        border-radius: 12px;
        padding: 20px;
        text-align: center;
        width: 45%;
        box-shadow: 0 4px 15px rgba(0,0,0,0.4);
    }

    .stat-value {
        font-size: 2rem;
        font-weight: bold;
        color: #ffc107;
    }

    .chart-section {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-around;
        gap: 20px;
    }

    .chart-card {
        flex: 1 1 45%;
        background: rgba(255,255,255,0.05);
        border-radius: 12px;
        padding: 20px;
        box-shadow: 0 4px 15px rgba(0,0,0,0.4);
    }

    table {
        width: 100%;
        color: #fff;
        margin-top: 20px;
        border-collapse: collapse;
    }

    th, td {
        padding: 8px 12px;
        border-bottom: 1px solid rgba(255,255,255,0.1);
    }

    th {
        color: #ffc107;
    }

    .footer-note {
        text-align: center;
        color: #888;
        margin-top: 30px;
        font-size: 0.9rem;
    }

    #userSearch {
        width: 100%;
        padding: 8px 12px;
        margin-bottom: 10px;
        border-radius: 8px;
        border: 1px solid #ffc10733;
        background: rgba(255,255,255,0.05);
        color: #fff;
    }
</style>

<div class="header-bar">
    <h3>🧠 Data Insights Dashboard</h3>
    <a asp-controller="Home" asp-action="Index">⬅ Back to Dashboard</a>
</div>

<div class="analytics-wrapper">
    <div class="analytics-card">
        <h2>📊 User Insights Overview</h2>
        <p class="text-center text-muted">Quick overview of registered users and role distribution.</p>

        <div class="stats-row">
            <div class="stat-box">
                <div class="stat-value">@Model.TotalUsers</div>
                <div>Total Registered Users</div>
            </div>
            <div class="stat-box">
                <div class="stat-value">@Model.AdminCount</div>
                <div>Admins</div>
            </div>
        </div>

        <div class="chart-section">
            <div class="chart-card">
                <h5>Role Distribution</h5>
                <canvas id="rolePieChart"></canvas>
            </div>

            <div class="chart-card">
                <h5>User Growth Over Time (Simulated)</h5>
                <canvas id="growthLineChart"></canvas>
            </div>
        </div>

        <div class="chart-card mt-4">
            <h5>📈 AI Summary Insight</h5>
            <p class="text-muted">
                Based on user role and activity patterns, the system currently has 
                <b>@Model.TotalUsers</b> users and <b>@Model.AdminCount</b> admins. 
                Forecasting analysis indicates a potential <b>@(Model.AdminCount * 10)%</b> leadership growth 
                and balanced user expansion across departments.
            </p>
        </div>

        <div class="chart-card" style="margin-top: 30px;">
            <h5>User List (Sample)</h5>
            <input type="text" id="userSearch" placeholder="Search users..." />
            <table id="userTable">
                <thead>
                    <tr><th>Full Name</th><th>Email</th><th>User ID</th></tr>
                </thead>
                <tbody>
                    @foreach (var u in Model.UsersList)
                    {
                        <tr>
                            <td>@u.FullName</td>
                            <td>@u.Email</td>
                            <td>@u.Id</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- ✅ NEW ATTENDANCE SECTION -->
        <div class="chart-section mt-5">
            <div class="chart-card">
                <h5>🕒 Attendance Summary</h5>
                <canvas id="attendancePieChart"></canvas>
            </div>

            <div class="chart-card">
                <h5>📅 Attendance Trend (Daily Check-ins)</h5>
                <canvas id="attendanceTrendChart"></canvas>
            </div>
        </div>

        <div class="footer-note">© 2025 - M_UserLogin | Data Insights Dashboard</div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    const roleData = JSON.parse('@Html.Raw(roleJson)');
    const attendanceDates = @Html.Raw(attendanceDates);
    const attendanceCounts = @Html.Raw(attendanceCounts);

    const roleColors = ['#ffc107', '#28a745', '#17a2b8', '#dc3545', '#6f42c1', '#fd7e14'];

    // Role Distribution Pie
    new Chart(document.getElementById('rolePieChart'), {
        type: 'pie',
        data: {
            labels: Object.keys(roleData),
            datasets: [{
                data: Object.values(roleData),
                backgroundColor: roleColors.slice(0, Object.keys(roleData).length)
            }]
        },
        options: { plugins: { legend: { labels: { color: 'white' } } } }
    });

    // User Growth Line
    new Chart(document.getElementById('growthLineChart'), {
        type: 'line',
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug'],
            datasets: [{
                label: 'Users Registered',
                data: [2, 4, 6, 7, 9, 10, 12, 15],
                borderColor: '#ffc107',
                backgroundColor: 'rgba(255,193,7,0.2)',
                tension: 0.3,
                fill: true,
                pointBorderColor: '#fff'
            }]
        },
        options: {
            plugins: { legend: { labels: { color: 'white' } } },
            scales: { x: { ticks: { color: 'white' } }, y: { ticks: { color: 'white' } } }
        }
    });

    // Attendance Summary Pie
    new Chart(document.getElementById('attendancePieChart'), {
        type: 'doughnut',
        data: {
            labels: ['Present', 'Absent'],
            datasets: [{
                data: [@Model.TotalPresent, @Model.TotalAbsent],
                backgroundColor: ['#28a745', '#dc3545']
            }]
        },
        options: { plugins: { legend: { labels: { color: 'white' } } } }
    });

    // Attendance Trend Bar
    new Chart(document.getElementById('attendanceTrendChart'), {
        type: 'bar',
        data: {
            labels: attendanceDates,
            datasets: [{
                label: 'Check-ins per day',
                data: attendanceCounts,
                backgroundColor: '#ffc107'
            }]
        },
        options: {
            scales: {
                x: { ticks: { color: '#fff' } },
                y: { ticks: { color: '#fff' } }
            },
            plugins: { legend: { labels: { color: '#fff' } } }
        }
    });

    // User Search
    const searchInput = document.getElementById('userSearch');
    searchInput.addEventListener('keyup', function() {
        const filter = this.value.toLowerCase();
        document.querySelectorAll('#userTable tbody tr').forEach(row => {
            row.style.display = row.innerText.toLowerCase().includes(filter) ? '' : 'none';
        });
    });
</script>
